{
  "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
  "fileTypes": ["writerly", "wly"],
  "name": "Writerly",
  "scopeName": "source.writerly",
  "patterns": [
    {
      "include": "#comment"
    },
    {
      "include": "#block-with-attributes"
    },
    {
      "include": "#codeblock"
    }
  ],
  "repository": {
    "comment": {
      "patterns": [
        {
          "captures": {
            "1": {
              "name": "punctuation.definition.comment.mark"
            }
          },
          "begin": "^\\s*!(?!!)",
          "end": "$",
          "name": "comment.line.mark"
        }
      ]
    },
    "block-with-attributes": {
      "begin": "^(\\s*)(\\|\\>?)\\s*([a-zA-Z_\\:][-a-zA-Z0-9\\._\\:]*)(.*)",
      "beginCaptures": {
        "1": {
          "name": "punctuation.whitespace.leading"
        },
        "2": {
          "name": "keyword.control.wly"
        },
        "3": {
          "name": "keyword.control.wly"
        },
        "4": {
          "patterns": [
            {
              "include": "#attributes"
            }
          ]
        }
      },
      "end": "^(?=\\s*$)|^(?=\\s*[|])|^(?=\\s+(?!!)\\s*=)|^(?=\\s+(?!!)[^\\s]*\\s+=)",
      "patterns": [
        {
          "match": "^(\\s+)(!!\\s*)(.*)",
          "captures": {
            "1": {
              "name": "punctuation.whitespace.leading"
            },
            "2": {
              "name": "punctuation.definition.comment.wly"
            },
            "3": {
              "name": "comment.line.attribute.wly"
            }
          }
        },
        {
          "match": "^(\\s+)([a-zA-Z_][-a-zA-Z0-9\\._\\:]*=\\s*[^=]*?)(?:\\s+[a-zA-Z_][-a-zA-Z0-9\\._\\:]*=\\s*[^=]*?)*\\s*$",
          "captures": {
            "1": {
              "name": "punctuation.whitespace.leading"
            },
            "2": {
              "patterns": [
                {
                  "include": "#attributes"
                }
              ]
            }
          }
        }
      ]
    },
    "attributes": {
      "patterns": [
        {
          "match": "\\b([a-zA-Z_][-a-zA-Z0-9\\._\\:]*)(=)(\\s*[^=]*?)(?=\\s+[a-zA-Z_][-a-zA-Z0-9\\._\\:]*=|$)",
          "captures": {
            "1": {
              "name": "entity.other.attribute-name.wly"
            },
            "2": {
              "name": "punctuation.separator.key-value.wly"
            },
            "3": {
              "patterns": [
                {
                  "include": "#attribute-values"
                }
              ]
            }
          }
        }
      ]
    },
    "attribute-values": {
      "patterns": [
        {
          "match": "\"([^\"]*)\"",
          "name": "string.quoted.double.wly",
          "captures": {
            "1": {
              "name": "string.quoted.double.content.wly"
            }
          }
        },
        {
          "match": "'([^']*)'",
          "name": "string.quoted.single.wly",
          "captures": {
            "1": {
              "name": "string.quoted.single.content.wly"
            }
          }
        },
        {
          "match": "\\b(true|false)\\b",
          "name": "constant.language.boolean.wly"
        },
        {
          "match": "\\b\\d+(\\.\\d+)?\\b",
          "name": "constant.numeric.wly"
        },
        {
          "match": "[^=]+",
          "name": "string.unquoted.wly"
        }
      ]
    },
    "codeblock": {
      "begin": "^(\\s*)(```)([a-zA-Z0-9_-]*)?\\s*$",
      "beginCaptures": {
        "1": {
          "name": "punctuation.whitespace.leading"
        },
        "2": {
          "name": "punctuation.definition.string.begin.markdown.wly"
        },
        "3": {
          "name": "fenced_code.block.language.wly"
        }
      },
      "end": "^(\\s*)(```)\\s*$",
      "endCaptures": {
        "1": {
          "name": "punctuation.whitespace.leading"
        },
        "2": {
          "name": "punctuation.definition.string.end.markdown.wly"
        }
      },
      "contentName": "markup.raw.block.wly"
    }
  }
}
